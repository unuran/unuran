# $Id: t_hist.conf 3448 2007-02-15 21:15:05Z leydold $
#############################################################################

[main]

[main - data:]

# method (for information only: the program scans the file name)
method: HIST

[main - header:]

/* prototypes */

\#define COMPARE_SAMPLE_SIZE   (10000)
\#define VIOLATE_SAMPLE_SIZE   (20)

UNUR_DISTR *get_distr_with_data( void );

#############################################################################

[new]

[new - invalid NULL ptr: 
   distr = NULL; ]

~( distr );
	--> expected_NULL --> UNUR_ERR_NULL

[new - invalid distribution type:
   distr = unur_distr_cont_new(); ]

~( distr );
	 --> expected_NULL --> UNUR_ERR_DISTR_INVALID

[new - data missing in distribution object:
   distr = unur_distr_cemp_new();   /* no data given */ ]

~( distr );
	--> expected_NULL --> UNUR_ERR_DISTR_REQUIRED

#############################################################################

[set]

#############################################################################

[get]

#############################################################################

[chg]

#############################################################################

[init]

[init - run init:
   distr = get_distr_with_data();
   par = unur_hist_new(distr);
   gen = unur_init( par ); <-- ! NULL ]

# this should be o.k.
	--> none --> 0x0u

#############################################################################

[reinit]

[reinit - does not exist:
   distr = get_distr_with_data();
   par = unur_hist_new(distr);
   gen = unur_init( par ); <-- ! NULL ]

unur_reinit( gen );
	--> expected_setfailed --> UNUR_ERR_NO_REINIT

unur_sample_cont( gen );
	--> expected_INFINITY --> UNUR_ERR_GEN_CONDITION


#############################################################################

[sample]

[sample - compare clone:
   UNUR_GEN *clone;
   distr = get_distr_with_data();
   par = unur_hist_new(distr);
   gen = unur_init( par ); <-- ! NULL ]

/* default generator object */
        -->compare_sequence_gen_start

/* clone */
clone = unur_gen_clone(gen);
unur_free(gen);
gen = clone;
        -->compare_sequence_gen


#############################################################################

[validate]

[validate - generators:]

# default
par[0] = unur_hist_new(@distr@);

[validate - distributions:]

# approximate normal distribution
{ double pv[1000];
  UNUR_DISTR *normal_dist;
  int i;
  double xmin, xmax;
  double fxmin, fxmax;
  xmin = -5.;
  fxmin = 0.;
  normal_dist = unur_distr_normal(NULL,0);
  for (i=0; i<1000; i++) {
    xmax = -5. + i/100.;
    fxmax = unur_distr_cont_eval_cdf(xmax,normal_dist);
    pv[i] = fxmax - fxmin;
    xmin = xmax;
    fxmin = fxmax; }
  unur_distr_free(normal_dist);
  distr[0] = unur_distr_cemp_new();
  unur_distr_cemp_set_hist(distr[0],pv,1000,-5.,5.); }

[validate - test chi2:]

#  + ... pass test
#  0 ... fail to initialize generator
#  - ... fail test
#  . ... do not run test
#  # ... comment
#
# generators:
#   [0] default
#
#	[0]  # distribution
#----------------------------------------------------------------
<0>	 +   # approximate normal distribution


#############################################################################
#############################################################################

[verbatim]

/*---------------------------------------------------------------------------*/

UNUR_DISTR *get_distr_with_data( void )
{
\#define HIST_SIZE 20
  double hist[HIST_SIZE];
  UNUR_DISTR *distr;
  int i;

  for (i=0; i<HIST_SIZE; i++)
    hist[i] = (2.*i)/((double)HIST_SIZE) + unur_urng_fish(NULL);

  distr = unur_distr_cemp_new();
  unur_distr_cemp_set_hist(distr,hist,HIST_SIZE,-2.5,7.5);

  return distr;

\#undef HIST_SIZE
} /* end of get_distr_with_data() */

/*---------------------------------------------------------------------------*/

#############################################################################
