
UNU.RAN Version 0.1
******************

We proudly announce the first public release of UNU.RAN
(Universal Non-Uniform RANdom number generators).

UNU.RAN  is an ANSI C library licensed under GPL. 
It contains universal (also called automatic or black-box) algorithms
that can generate random numbers from large classes of continuous or
discrete distributions. 

The library and an extensive online documentation are available at:

          -------------------------------------------
             http://statistik.wu-wien.ac.at/unuran/ 
          -------------------------------------------

April 4th, 2001

Josef Leydold     (leydold@statistik.wu-wien.ac.at)
Wolfgang Hoermann (hormannw@boun.edu.tr)
Erich Janka       (janka@statistik.wu-wien.ac.at)
Guenter Tirler    (tirler@statistik.wu-wien.ac.at)



---------------------------------------------------------
A short overview
---------------------------------------------------------

To generate random numbers the user must supply some information about
the desired distribution, especially a C-function that computes the
density and - depending on the chosen methods - some additional
information (like the borders of the domain, the mode, the derivative
of the density ...). After a user has given this information an
init-program computes all tables and constants necessary for the
random variate generation. The sample program can then generate
variates from the desired distribution.

The main part 
   of UNURAN are different universal algorithms (called methods).
   There are:

	 7 methods for continuous univariate distributions
	 3 methods for discrete univariate distributions
	 1 method  for univariate empirical distributions
		   (given by an observed sample)
	 1 method  for multivariate empirical distributions
		   (given by a vector sample)

   The choice of the method depends on the information available for
   the distribution and on the desired charateristics of the algorithm
   (fast initialisation and slow sampling, slow initialisation and
   fast sampling).

A second important part
   of UNURAN is the distribution module containing all necessary
   functions for many continuous and discrete univariate standard
   distributions. Thus UNURAN can be used  without extra coding to
   obtain very fast generators for the best known standard
   distributions.


UNURAN is coded in ANSI C but uses an object oriented programming
interface. There are three objects:

   distribution objects
	containing all information of the distribution.
   parameter objects
	containing all input parameters (and defaults) for the
        different methods.
   generator object
	produced by the initialization program, containing everything
	necessary for sampling.


Of course a uniform random number generator is necessary to use
UNURAN. We provide an interface to use the PRNG uniform package from
the pLab team from the University of Salzburg (Austria),
available at http://random.mat.ac.at/ or from
http://statistik.wu-wien.ac.at/prng/.
It is also no problem to include any other uniform random number
generators.


---------------------------------------------------------
ADVANTAGES OF UNUNRAN
---------------------------------------------------------

Why can it be worth the to download UNURAN and to understand the
concept of its interface? Isn't it much faster to implement a simple
standard method for the distribution I am interested in?

- The first and main advantage lies in the modelling flexibility you
  gain for your simulation. Once you have installed UNURAN you can
  sample from practically all uni-modal (and other) distributions
  without coding more than the density functions. For a big number of
  standard distributions (and truncated versions of these standard
  distributions) you need not even code the densities as these are
  already included in UNURAN.

- It is possible to sample from non-standard distribution. In fact
  only a pointer to a function that returns e.g. the density at a
  given point x is required.

- Distributions can be exchanged easily. For example it is not
  difficult at all to start your simulation with the normal
  distribution, and switch to an empirical distribution later.

- The library contains reliable and fast generation algorithms some of
  which are only slightly influenced by the chosen distribution.
  (However numerical inversion is included as a (very slow) brute
  force algorithm for the rare cases where the more sophisticated
  methods do work.)

- Correlation induction facilities are included. 

---------------------------------------------------------






