******* Problems and smaller addings for existing library ***************

-----------------------------------------------------------------------------

Ich hab folgendes Problem gefunden: Wenn ich bei arou oder tdr mit 

"unur_???_set_guidefactor(par,0.)"   ??? steht dabei fuer arou oder tdr

den guidetable abdrehen will, haut es das program mit einem seg-fault
beim ersten sampling Versuch auf. Das passiert auch, wenn man obige
Zeile an der entsprechenden Stelle in example1.c oder example2.c
einfuegt. Leider gibt es keine Informationen im log file, auch wenn man
alle Debugging flags andreht.
 
Das passiert auch, wenn man einen kleinen guidefactor (zB 0.5)
verwendet, und es nur sehr wenig intervalle gibt.


Das Problem ist wohl, dass in solchen Faellen, der guidetable nicht
alloziert wird.
Ich habe mir die tdr-source kurz angeschaut. An ein paar Stellen habe
ich gesehen, dass der guide-table auf jedenfall erzeugt wird, falls die
Laenge 0 sein soll, wird sie auf 1 gesetzt. Irgendwo scheint dieser
Schritt jedoch vergessen worden zu sein.
Allerdings ist die source von tdr so umfanreich, dass sie fuer mich doch
sehr unuebersichtlich ist.


-----------------------------------------------------------------------------

(*) using unur_sample_cont() with a generator object of the wrong type
    causes a segmentation fault.

-----------------------------------------------------------------------------

(*) The String API does not provide the full functionality as the API
    using function calls. 

-----------------------------------------------------------------------------

(*) CSTD, DSTD: alle Varianten sollten fuer alle Parameter funktionieren.

-----------------------------------------------------------------------------

(*) CSTD: Beta Standardgeneratoren funktionieren nicht.

-----------------------------------------------------------------------------

(*) DSTD: domain !!

-----------------------------------------------------------------------------

(*) TABL: 
	(.) ist eine baustelle!!
	(.) ueberpruefe ob area unter hut zu gross (wie??)
	(.) make_guide_table nicht jedesmal aufrufen
	(.) ueberpruefe ob PDF(x) NaN liefert
	
-----------------------------------------------------------------------------

(*) TDR:
	(.) variante ohne ableitung der pdf
	(.) make_guide_table nicht jedesmal aufrufen
	(.) teste ob uniform = 0 or = 1 (?)
        (.) implementation for arbitrary c
	(.) optimale beruehrpunkte.

-----------------------------------------------------------------------------

(*) AROU:
	(.) make_guide_table nicht jedesmal aufrufen
	(.) teste ob uniform = 0 or = 1 (?)

-----------------------------------------------------------------------------

(*) DARI and UTDR: Clean implementation, especially considering the
    initialisation of all variables, and the logic of retrying
    setup, if it was unsuccessfull.

    (.) Implementation for arbitrary c

----------------------------------------------------------------------

(*) missing distributions (Burr, GIG, Zipf, ExtremeII, LOMAX
                                      Lognormal, Slash)
    (.) finish implementation
    (.) test correctness of distribution

----------------------------------------------------------------------

(*) testing UNRUAN on different platforms (including windows?)

----------------------------------------------------------------------



***** New ideas linked with UNURAN ******************

--------------------------------------------------------------

(*) Statistical testing of mean, variance and quantiles of the generated
    distributions. (perhaps following WIN-RAND).
    (Routines for computing these quantities for samples already
    implemented in the src/tests.)

------------------------------------------------------------------------

(*) computation of Min(c_loc) for built in distributions
(*) numerical "estimation" of Min(c_loc) for arbitrary densities

------------------------------------------------------------------------

(*) Generator for unbounded densities
    Could be realized with TABL following Ahrens's suggestions.

------------------------------------------------------------------------

(*) Generator for multimodal distributions 
    (partly realized with TABL)

------------------------------------------------------------------------

(*) generator for (bi- and) multivariate T-concave distributions

------------------------------------------------------------------------

(*) URNG: make compiler switch. distinguish between uniform RNG that may 
          return 0. and those that do not.
 
------------------------------------------------------------------------

