-----------------------------------------------------------------------------
UNURAN BESPRECHUNG vom 11.2.2004

Konkrete Ziele in naechster Zeit:

*multivariate distribution object JL
*multivariate normal distribution als distribution mit dichte RK
*test fuer multivariate normal distribution    RK
*E-mail an Gleb Beliakov, die den design des multivariaten 
   Verteilungsonbjekts erklaert JL
*Testsuite fuer verschiedene multivariate Verteilungen JL&RK
*TDRMV und TDR2DIM in UNURAN eingliedern RK & JL
*mehrere multivariate distributions (vor allem t-distribution) aufnehmen
*DOKU Ausfuehrlichere Erklaerungen zu den Methoden und Appendix
      ueber Inversion, rejection, rou, decomposition und guide table WH


Bis Sommer:

*Gleichverteilungschnittstelle mit einer structure und 
   "wrapped function calls" JL
*Das Paket von Pierre einbinden und als default verwenden JL
   Alle Beispiele (auch die Correlation induction) darauf umstellen RK
*"C-lose" dokumentation des String interfaces und UNURAN R-version GT
*New UNRUAN release ALLE
*Visual C++ library und examples der neuen release RK
*Experimente: Wie macht man Gibbssampling mit UNURAN   WH

*DOKU: Beispiele zu jeder Methode: WH spater RK
*DOKU: Seitenumbruch vor jeder neuen Methode JL


(bis Sommer oder spaeter)

*Eine Methode Combined (fuer unstetige Dichten und 
                        gemischt stetig diskrete Verteilungen)
*Eine klein version von UNURAN fuer EXCEL
*DEMO Programme fuer Gibbs sampling, MC integration, QMC etc...

*multivariate AROU  JL&RK
*multivariate Ahrens  WH


Wolfgang

-----------------------------------------------------------------------------

Lieber Wolfgang,

mir ist noch eingefallen, dass wir eventuell (langfristig) auch
vorsehen sollten, dass man statt der PDF den logarithmus der PDF, also
log(PDF(x)) als alternativzugang verwenden koennte. vorteil:
numerisch viel stabiler. ausserdem berechnen wir einige standard PDFs
intern sowieso als y=log(PDF(x)) und geben den wert dann mittels 
return exp(y) aus.

lg Josef


-----------------------------------------------------------------------------
Lieber Josef!

Ich habe heute UNURAN-0.4.4 installiert. Dabei ist mir aufgefallen, dass 
das INSTALL file offenbar nie veraendert wurde. Das heisst, es spricht 
nur von der Installation der static library.
Auch in Sachen uniform generator ist es nicht auf dem neuesten Stand.

Auch auf der UNURAN web-seite wird davon gerspochen, dass man prng 
installieren sollte, bevor man uNURAN verwendet.

lles das sollten wir vor der naechsten release auf den neusten STand 
bringen.

Ich weiss, dass das jetzt nicht aktuell ist, aber es ist mir jetzt grad 
aufgefallen und sonst vergess ich das wieder.

LG Wolfgang

-----------------------------------------------------------------------------

(*) unur_sample_vec() auch fuer univariate.

-----------------------------------------------------------------------------

(*) erklaere Phrase: ... in case of failsure an error code is returned.

-----------------------------------------------------------------------------

Lieber Josef!

Ich bin ja derzeit ein UNURAN Benutzer.

Folgende Dinge sind mir unangenehm aufgefallen Vielleicht koennte man
daraus TODOs machen?

1. TDR: Ich mach correlation induction und brauche daher sehr grosse
sqhratio. zB 0.999999.
Wenn ich auch die maximale Anzahl der Punkte nicht zu gross haben
moechte (zB 800) bekomme ich manchmal bei der Normalverteilung die
warning:
DARS aborted, ratio too small.
Und dann funktioniert die correlation induction ueberhaupt nicht.
(Ich schliesse daraus, dass er dann irgendwie auf ARS zurueckfaellt und
dabei die synchronisierung zerstoert wird????

2. UTDR (oder distribution objects): Ich vermisse (fuer die
hypergeometric Verteilung) eine Moeglichkeit, die unegfaehre A_f (oder
einen bound fuer A_f) einzugeben. Natuerlich kann ich die ungefaehre A_f
einfache als exakte eingeben, aber das kann doch leicht zu
missverstaendnissen fuehren.





******* Problems and smaller addings for existing library ***************

-----------------------------------------------------------------------------

Ich hab folgendes Problem gefunden: Wenn ich bei arou oder tdr mit 

"unur_???_set_guidefactor(par,0.)"   ??? steht dabei fuer arou oder tdr

den guidetable abdrehen will, haut es das program mit einem seg-fault
beim ersten sampling Versuch auf. Das passiert auch, wenn man obige
Zeile an der entsprechenden Stelle in example1.c oder example2.c
einfuegt. Leider gibt es keine Informationen im log file, auch wenn man
alle Debugging flags andreht.
 
Das passiert auch, wenn man einen kleinen guidefactor (zB 0.5)
verwendet, und es nur sehr wenig intervalle gibt.


Das Problem ist wohl, dass in solchen Faellen, der guidetable nicht
alloziert wird.
Ich habe mir die tdr-source kurz angeschaut. An ein paar Stellen habe
ich gesehen, dass der guide-table auf jedenfall erzeugt wird, falls die
Laenge 0 sein soll, wird sie auf 1 gesetzt. Irgendwo scheint dieser
Schritt jedoch vergessen worden zu sein.
Allerdings ist die source von tdr so umfanreich, dass sie fuer mich doch
sehr unuebersichtlich ist.


-----------------------------------------------------------------------------

(*) Funktionen in stetigen 'Standarddichten'
    (sind noch nicht alle implementiert):
exp
log
abs
pow
sqrt
tan
sin
atan
tanh
sinh
Besselfunktion 3. Art
Gamma
Beta

-----------------------------------------------------------------------------

(*) using unur_sample_cont() with a generator object of the wrong type
    causes a segmentation fault.

-----------------------------------------------------------------------------

(*) The String API does not provide the full functionality as the API
    using function calls. 

-----------------------------------------------------------------------------

(*) CSTD, DSTD: alle Varianten sollten fuer alle Parameter funktionieren.

-----------------------------------------------------------------------------

(*) CSTD: Beta Standardgeneratoren funktionieren nicht.

-----------------------------------------------------------------------------

(*) DSTD: domain !!

-----------------------------------------------------------------------------

(*) TABL: 
	(.) ist eine baustelle!!
	(.) ueberpruefe ob area unter hut zu gross (wie??)
	(.) make_guide_table nicht jedesmal aufrufen
	(.) ueberpruefe ob PDF(x) NaN liefert
	
-----------------------------------------------------------------------------

(*) TDR:
	(.) variante ohne ableitung der pdf
	(.) make_guide_table nicht jedesmal aufrufen
	(.) teste ob uniform = 0 or = 1 (?)
        (.) implementation for arbitrary c
	(.) optimale beruehrpunkte.

-----------------------------------------------------------------------------

(*) AROU:
	(.) make_guide_table nicht jedesmal aufrufen
	(.) teste ob uniform = 0 or = 1 (?)

-----------------------------------------------------------------------------

(*) DARI and UTDR: Clean implementation, especially considering the
    initialisation of all variables, and the logic of retrying
    setup, if it was unsuccessfull.

    (.) Implementation for arbitrary c

----------------------------------------------------------------------

(*) missing distributions (Burr, GIG, Zipf, ExtremeII, LOMAX
                                      Lognormal, Slash)
    (.) finish implementation
    (.) test correctness of distribution

----------------------------------------------------------------------

(*) testing UNRUAN on different platforms (including windows?)

----------------------------------------------------------------------



***** New ideas linked with UNURAN ******************

--------------------------------------------------------------

(*) Statistical testing of mean, variance and quantiles of the generated
    distributions. (perhaps following WIN-RAND).
    (Routines for computing these quantities for samples already
    implemented in the src/tests.)

------------------------------------------------------------------------

(*) computation of Min(c_loc) for built in distributions
(*) numerical "estimation" of Min(c_loc) for arbitrary densities

------------------------------------------------------------------------

(*) Generator for unbounded densities
    Could be realized with TABL following Ahrens's suggestions.

------------------------------------------------------------------------

(*) Generator for multimodal distributions 
    (partly realized with TABL)

------------------------------------------------------------------------

(*) generator for (bi- and) multivariate T-concave distributions

------------------------------------------------------------------------

(*) URNG: make compiler switch. distinguish between uniform RNG that may 
          return 0. and those that do not.
 
------------------------------------------------------------------------

