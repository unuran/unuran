#!/usr/bin/perl

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Perl script for generating one file from method description and
# method function references
# 
# Call:  ./distrref.perl
# Input:   
# Output: texi-code
# 
# E.JANKA  February 2001
# $Id$
#
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

use FileHandle;

@name = ();
%title = ();
%descr = ();
%ref   = ();

$INFILE1 = "ref_methods.texi";
$INFILE2 = "ref_method_functions.texi";

open INFILE1 or die "Can't open $INFILE1";

# initialize array with names of methods
while (<INFILE1>){
  if ($_ =~ /\@node\s+(\w+)/){
    push @name , $1;
  }

}

# storing the description of the methods
open INFILE1 or die "Can't open $INFILE1";
while (<INFILE1>){

  if ($_ =~ /\@node\s+(\w+)/){
     $method = $1;
     $descrON = 0;
     $_ = <INFILE1>;
  }

  if ($_ =~ /\s*\@subsection\s+(.*)/){
     $title{$method} = $1;
     $descrON = 1;
     $_ = <INFILE1>;
  }    

  if ($descrON == 1){
    $descr{$method} = join ' ', $descr{$method}, $_;

  }

}

#storing the function reference of the methods
open INFILE2 or die "Can't open $INFILE2";
while (<INFILE2>){

  
  if ($_ =~ /\@node\s+(\w+)ref/){
     $method = $1;
     $descrON = 0;
     $_ = <INFILE2>;
  }
  
  if ($_ =~ /\s*\@subsection\s+(.*)/){
     $descrON = 1;
     $_ = <INFILE2>;
  }    

  if ($descrON == 1){
    $ref{$method} = join ' ', $ref{$method}, $_;

  }

}

@keys = sort {$a cmp $b} keys %title;

# output
open(OUTFILE, ">&STDOUT") or die "Can't dup stdout";
print OUTFILE "\@c Automatic generated by $0\n\n";
foreach $method (@keys){

  
print "\@node $method\n\@subsection $title{$method}\n$descr{$method}\n";
print "\@subsubsection Function Reference\n$ref{$method}\n";
}





