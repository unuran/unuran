# $Id$
#############################################################################

[main]

[main - data:]

# method (for information only: the program scans the file name)
method: AUTO

# which uniform random number generator should be used for testing
# Mersenne Twister as URNG
urng: mt19937(8275)

[main - header:]

/* prototypes */

int unur_auto_set_pedantic( struct unur_par *par, int pedantic );

static int COMPARE_SAMPLE_SIZE = 10000;
static int VIOLATE_SAMPLE_SIZE = 20;

#############################################################################

[new]

[new - invalid NULL ptr: 
   distr = NULL; ]

~( distr );
	--> expected_NULL --> UNUR_ERR_NULL


#############################################################################

[set]

[set - invalid NULL ptr: 
   par = NULL; ]

~_logss(par,1);

[set - invalid parameter object:
   distr = unur_distr_normal(NULL,0);
   par = unur_tdr_new(distr); ]

~_logss(par,1);
	--> expected_setfailed --> UNUR_ERR_PAR_INVALID


[set - invalid parameters:
   distr = unur_distr_normal(NULL,0);
   par = unur_auto_new(distr); ]

~_logss(par,-1);
	--> expected_setfailed --> UNUR_ERR_PAR_SET

free(par);

#############################################################################

[get]

#############################################################################

[chg]

#############################################################################

[init]

#############################################################################

[reinit]

#############################################################################

[sample]

[sample - compare:
   double fpar[2] = {0.,1.};
   distr = unur_distr_normal(fpar,0); 
   par = NULL; ]

/* TDR */
par = unur_tdr_new(distr);
        -->compare_double_sequence_par_start

/* AUTO */
par = unur_auto_new(distr);
        -->compare_double_sequence_par

[sample - compare:
   double fpar[] = {0.1};
   distr = unur_distr_geometric(fpar,1);
   par = NULL; ]

/* DARI */
par = unur_dari_new(distr);
        -->compare_int_sequence_par_start

/* AUTO */
par = unur_auto_new(distr);
        -->compare_int_sequence_par


#############################################################################

[validate]

#############################################################################
#############################################################################

[verbatim]

/* no such function */
int unur_auto_set_pedantic( struct unur_par *par, int pedantic )
{ return 1; }

#############################################################################
