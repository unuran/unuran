# $Id$
#############################################################################

[main]

[main - data:]

# method (for information only: the program scans the file name)
method: DISTR_CXTRANS

[main - header:]

/* prototypes */

\#define COMPARE_SAMPLE_SIZE  (500)
\#define VIOLATE_SAMPLE_SIZE   (20)

#############################################################################

[new]

[new - invalid NULL ptr: 
   distr = NULL; ]

unur_distr_cxtrans_new( distr, 5. );
	--> expected_NULL --> UNUR_ERR_NULL


[new - invalid distribution type:
   distr = unur_distr_discr_new(); ]

unur_distr_cxtrans_new( distr, 5. );
	 --> expected_NULL --> UNUR_ERR_DISTR_INVALID


[new - invalid data:
	distr = unur_distr_normal(NULL,0); ]

unur_distr_cxtrans_new( distr, -5. );
	 --> expected_NULL --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_new( distr, 0. );
	 --> expected_NULL --> UNUR_ERR_DISTR_INVALID


#############################################################################

[set]

[set - invalid NULL ptr:
   distr = NULL; ]

unur_distr_cxtrans_set_alpha( distr, 5 );
        --> expected_setfailed --> UNUR_ERR_NULL

unur_distr_cxtrans_set_domain( distr, 0., 1. )
	--> expected_setfailed --> UNUR_ERR_NULL

unur_distr_cxtrans_set_mode( distr, 0. )
	--> expected_setfailed --> UNUR_ERR_NULL

unur_distr_cxtrans_set_pdfpole( distr, 0., 0. )
	--> expected_setfailed --> UNUR_ERR_NULL


[set - invalid distribution object:
   distr = unur_distr_discr_new(); ]

unur_distr_cxtrans_set_alpha( distr, 5 );
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_set_domain( distr, 0., 1. )
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_set_pdfpole( distr, 0., 0. )
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID


[set - invalid distribution object:
   distr = unur_distr_normal(NULL,0); ]

unur_distr_cxtrans_set_alpha( distr, 5 );
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_set_domain( distr, 0., 1. )
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_set_pdfpole( distr, 0., 0. )
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID


[set - invalid parameters:
   UNUR_DISTR *cxt;
   distr = unur_distr_normal(NULL,0);
   cxt = unur_distr_cxtrans_new( distr, 5. ); ]

unur_distr_cxtrans_set_alpha( cxt, -5. );
	--> expected_setfailed --> UNUR_ERR_DISTR_SET

unur_distr_cxtrans_set_alpha( cxt, 0. );
	--> expected_setfailed --> UNUR_ERR_DISTR_SET

unur_distr_cxtrans_set_pdfpole( cxt, -1., 0. )
	--> expected_setfailed --> UNUR_ERR_DISTR_SET

unur_distr_cxtrans_set_alpha( cxt, UNUR_INFINITY );
unur_distr_cxtrans_set_domain( cxt, -1., 1. )
	--> expected_setfailed --> UNUR_ERR_DISTR_SET

unur_distr_free(cxt);


#############################################################################

[get]

[get - invalid NULL ptr: 
   distr = NULL; ]

unur_distr_cxtrans_get_distribution( distr );
        --> expected_NULL --> UNUR_ERR_NULL

unur_distr_cxtrans_get_alpha( distr );
        --> expected_setfailed --> UNUR_ERR_NULL


[get - invalid distribution type:
   distr = unur_distr_discr_new(); ]

unur_distr_cxtrans_get_distribution( distr );
	--> expected_NULL --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_get_alpha( distr );
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID


[get - invalid distribution id:
   distr = unur_distr_cont_new(); ]

unur_distr_cxtrans_get_distribution( distr );
	--> expected_NULL --> UNUR_ERR_DISTR_INVALID

unur_distr_cxtrans_get_alpha( distr );
	--> expected_setfailed --> UNUR_ERR_DISTR_INVALID


#############################################################################

[chg]

#############################################################################

[init]

#############################################################################

[reinit]

#############################################################################

[sample]

[sample - compare clone:
   UNUR_GEN *clone;
   UNUR_DISTR *d;
   d = unur_distr_cauchy(NULL,0);
   unur_distr_cont_set_domain(d,0,UNUR_INFINITY);
   distr = unur_distr_cxtrans_new( d, 0.5 );
   unur_distr_free(d);
   par = unur_arou_new(distr);
   unur_arou_set_max_sqhratio(par,0.);
   gen = unur_init( par ); <-- ! NULL ]

/* original generator object */
	-->compare_double_sequence_gen_start

/* clone */
clone = unur_gen_clone(gen);
unur_free(gen);
gen = clone;
        -->compare_double_sequence_gen

#.....................................................................

#[sample - compare stringparser: ]


#############################################################################

[validate]

[validate - generators:]

# TDR
par[0] = unur_tdr_new(@distr@);

# AROU
par[1] = unur_arou_new(@distr@);

# SROU
par[2] = unur_srou_new(@distr@);

# HINV
par[3] = unur_ninv_new(@distr@);

[validate - distributions:]

# Exponential distribution
{ UNUR_DISTR *d;
d = unur_distr_exponential( NULL, 0 );
distr[0] = unur_distr_cxtrans_new( d, 1. );
unur_distr_free(d); }

{ UNUR_DISTR *d;
d = unur_distr_exponential( NULL, 0 );
distr[1] = unur_distr_cxtrans_new( d, 0.5 );
unur_distr_free(d); }

{ UNUR_DISTR *d;
d = unur_distr_exponential( NULL, 0 );
distr[2] = unur_distr_cxtrans_new( d, 0.1 );
unur_distr_free(d); }

{ UNUR_DISTR *d;
d = unur_distr_exponential( NULL, 0 );
distr[3] = unur_distr_cxtrans_new( d, 0. );
unur_distr_free(d); }

# Gamma distributions
#{ UNUR_DISTR *d;
#fpm[0] = 1.;
#d = unur_distr_gamma( fpm,1 );
#distr[4] = unur_distr_cxtrans_new( d, 10, 8);
#unur_distr_free(d); }


[validate - test chi2:]
#
#  + ... pass test
#  0 ... fail to initialize generator
#  - ... fail test
#  . ... do not run test
#  # ... comment
#
# generators:
#   [0] TDR
#   [1] AROU
#   [2] SROU
#   [3] HINV
#
#	[0]  [1]  [2]  [3]	# distribution
#-----------------------------------------------------
<0>	 +    +    +	+	# exponential (1), alpha=1 
<1>	 +    +    +	+	# exponential (1), alpha=0.5
<2>	 +    +    +	+	# exponential (1), alpha=0.1
<3>	 .    .    +	+	# exponential (1), alpha=0 (log)


#############################################################################
#############################################################################

[verbatim]

#############################################################################
