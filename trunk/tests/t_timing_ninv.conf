# $Id$
#############################################################################

[main]

[main - data:]

# method - timings for various methods
method: TIMING

[main - header:]

\#define COMPARE_SAMPLE_SIZE   (500)
\#define VIOLATE_SAMPLE_SIZE   (20)

/* prototypes */

#############################################################################

[new]

#############################################################################

[set]

#############################################################################

[get]

#############################################################################

[chg]

#############################################################################

[init]

#############################################################################

[reinit]

#############################################################################

[sample]

#############################################################################

[validate]

[validate - generators:]

# CSTD with inversion      
par[0] = unur_cstd_new(@distr@);
if (!unur_cstd_set_variant(par,UNUR_STDGEN_INVERSION)) { par = NULL; }

# NINV (regula) with table of size 100
par[1] = unur_ninv_new(@distr@);
unur_ninv_set_useregula(par);
unur_ninv_set_table(par, 100);

# NINV (regula) without table
par[2] = unur_ninv_new(@distr@);
unur_ninv_set_useregula(par);

# NINV (newton) with table of size 100
par[3] = unur_ninv_new(@distr@);
unur_ninv_set_usenewton(par);
unur_ninv_set_table(par, 100);

# NINV (newton) without table
par[4] = unur_ninv_new(@distr@);
unur_ninv_set_usenewton(par);

[validate - distributions:]

# Beta distributions
fpm[0] = 1.;
fpm[1] = 2.;
distr[0] = unur_distr_beta(fpm,2);

fpm[0] = 1.;
fpm[1] = 5.;
distr[1] = unur_distr_beta(fpm,2);

fpm[0] = 1.;
fpm[1] = 100.;
distr[2] = unur_distr_beta(fpm,2);

fpm[0] = 3.;
fpm[1] = 4.;
distr[3] = unur_distr_beta(fpm,2);

fpm[0] = 5.;
fpm[1] = 100.;
distr[4] = unur_distr_beta(fpm,2);

fpm[0] = 500.;
fpm[1] = 300.;
distr[5] = unur_distr_beta(fpm,2);

fpm[0] = 5.;
fpm[1] = 10.;
fpm[2] = -3.;
fpm[3] = 15.;
distr[6] = unur_distr_beta(fpm,4);

# Cauchy distributions
distr[7] = unur_distr_cauchy(NULL,0);

fpm[0] = 1.;
fpm[1] = 20.;
distr[8] = unur_distr_cauchy(fpm,2);

# Gamma distributions
fpm[0] = 1.;
distr[9] = unur_distr_gamma(fpm,1);

fpm[0] = 2.;
distr[10] = unur_distr_gamma(fpm,1);

fpm[0] = 3.;
distr[11] = unur_distr_gamma(fpm,1);

fpm[0] = 10.;
distr[12] = unur_distr_gamma(fpm,1);

fpm[0] = 1000.;
distr[13] = unur_distr_gamma(fpm,1);

fpm[0] = 5.;
fpm[1] = 1000.;
distr[14] = unur_distr_gamma(fpm,2);

fpm[0] = 5.;
fpm[1] = 1.e-5;
distr[15] = unur_distr_gamma(fpm,2);

fpm[0] = 5.;
fpm[1] = 10.;
fpm[2] = 1000;
distr[16] = unur_distr_gamma(fpm,3);

# Normal distributions
distr[17] = unur_distr_normal(NULL,0);

fpm[0] = 1.;
fpm[1] = 1.e-5;
distr[18] = unur_distr_normal(fpm,2);

fpm[0] = 0.;
fpm[1] = 1.e+5;
distr[19] = unur_distr_normal(fpm,2);

# Uniform distributions
distr[20] = unur_distr_uniform(NULL,0);

fpm[0] = 1.;
fpm[1] = 20.;
distr[21] = unur_distr_uniform(fpm,2);


[validate - timing:]

#  + ... pass test
#  . ... do not run test
#  # ... comment
#
# generators:
#   [0] ... CSTD with inversion
#   [1] ... NINV (regula) with table of size 100
#   [2] ... NINV (regula) without table
#   [3] ... NINV (newton) with table of size 100
#   [4] ... NINV (newton) without table
#
#gen	0   1   2   3   4	# distribution
#-------------------------------------------------------------
<0>	4   4   4   4   4	# beta (1, 2)
<1>	4   4   4   4   4	# beta (1, 5)
<2>	3   4   4   .   .	# beta (1, 100)
<3>	4   4   4   4   .	# beta (3, 4)
<4>	4   4   3   4   .	# beta (5, 100)
<5>	3   3   3   3   .	# beta (500, 300)
<6>	4   4   3   4   .	# beta (5, 10, -3, 15)
<7>	5   4   4   4   4	# cauchy ()
<8>	5   4   4   4   4	# cauchy (1, 20)
<9>	.   4   4   4   4	# gamma (1)
<10>	.   4   4   4   4	# gamma (2)
<11>	.   4   4   4   4	# gamma (3)
<12>	.   4   4   4   .	# gamma (10)
<13>	.   3   3   4   .	# gamma (1000)
<14>	.   4   4   3   .	# gamma (5, 1000, 0)
<15>	.   4   4   4   .	# gamma (5, 1e-05, 0)
<16> 	.   4   4   4   .       # gamma (5, 10, 100000)
<17>	5   4   4   4   4	# normal ()
<18>	5   4   4   .   .	# normal (1, 1e-05)
<19>	5   4   4   4   .	# normal (1, 1e+05)
<20>	5   4   4   4   5	# uniform ()
<21>	5   4   4   4   5	# uniform (1, 20)


#############################################################################
#############################################################################

[verbatim]

#############################################################################
