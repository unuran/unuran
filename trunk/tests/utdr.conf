# $Id$
#############################################################################

[main]

[main - data:]

# method
method: UTDR

# type of generator (cont|discr)
type: cont

# which distributions should be used for testing
# T-concave distributions with c <= -0.5
distributions: type & T_Tconcave, c_max >= -0.5

# which uniform random number generator should be used for testing
# Mersenne Twister as URNG
urng: mt19937(1037)

[main - header:]

/* prototypes */
double pdf( double x, UNUR_DISTR *distr );

double pdf_bimodal( double x, UNUR_DISTR *distr );
double dpdf_bimodal( double x, UNUR_DISTR *distr );

double pdf_negative( double x, UNUR_DISTR *distr );
double dpdf_negative( double x, UNUR_DISTR *distr );

double pdf_partnegative( double x, UNUR_DISTR *distr );
double dpdf_partnegative( double x, UNUR_DISTR *distr );

static int COMPARE_SAMPLE_SIZE = 500;
static int VIOLATE_SAMPLE_SIZE = 20;

#############################################################################

[new]

[new - invalid NULL ptr: 
   distr = NULL; ]

~( distr );
	--> expected_NULL --> UNUR_ERR_NULL

[new - invalid distribution type:
   distr = unur_distr_new(UNUR_DISTR_DISCR); ]

~( distr );
	 --> expected_NULL --> UNUR_ERR_DISTR_INVALID

[new - data missing in distribution object:
   distr = unur_distr_new(UNUR_DISTR_CONT); ]

/* pdf, mode, pdfarea */
~( distr );
        --> expected_NULL --> UNUR_ERR_DISTR_REQUIRED

/* mode, pdfarea */
unur_distr_cont_set_pdf(distr,pdf);
~( distr );
        --> expected_NULL --> UNUR_ERR_DISTR_REQUIRED

/* pdfarea */
unur_distr_cont_set_mode(distr,1.);
~( distr );
        --> expected_NULL --> UNUR_ERR_DISTR_REQUIRED


#############################################################################

[set]

[set - invalid NULL ptr: 
   par = NULL; ]

~_verify( par, 1 );
	--> expected_setfailed --> UNUR_ERR_NULL

~_pdfatmode(par,1.);
        --> expected_setfailed --> UNUR_ERR_NULL

~_cfactor(par, 1.);
        --> expected_setfailed --> UNUR_ERR_NULL

~_deltafactor(par, 1.);
        --> expected_setfailed --> UNUR_ERR_NULL



[set - invalid parameter object:
   double fpar[2] = {0.,1.};
   distr = unur_distr_normal(fpar,2);
   par = unur_arou_new(distr); ]

~_verify( par, 1 );
	--> expected_setfailed --> UNUR_ERR_PAR_INVALID

~_pdfatmode(par,1.);
        --> expected_setfailed --> UNUR_ERR_PAR_INVALID

~_cfactor(par, 1.);
        --> expected_setfailed --> UNUR_ERR_PAR_INVALID

~_deltafactor(par, 1.);
        --> expected_setfailed --> UNUR_ERR_PAR_INVALID


[set - invalid parameters:
   double fpar[2] = {0.,1.};
   distr = unur_distr_normal(fpar,2);
   par = unur_utdr_new(distr); ]

~_pdfatmode(par,-1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET

~_cfactor(par, -1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET

~_deltafactor(par, -1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET

~_deltafactor(par, 1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET

#############################################################################

[get]

#############################################################################

[chg]

[chg - invalid generator object:
   double fpar[2] = {0.,1.};
   distr = unur_distr_normal(fpar,2);
   par = unur_arou_new(distr);
   unur_set_debug(par,0);
   gen = unur_init( par ); <-- ! NULL ]

~_pdfparams(gen,fpar,2);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

~_domain(gen,0.,1.);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

~_mode(gen,0.);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

~_pdfatmode(gen,1.);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

~_pdfarea(gen,1.);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

[chg - invalid parameters:
   double fpar[2] = {0.,1.};
   distr = unur_distr_normal(fpar,2);
   par = unur_utdr_new(distr);
   gen = unur_init( par ); <-- ! NULL ]

~_pdfparams(gen,NULL,1);
        --> expected_setfailed --> UNUR_ERR_NULL

~_pdfparams(gen,fpar,UNUR_DISTR_MAXPARAMS+10);
        --> expected_setfailed --> UNUR_ERR_DISTR_NPARAMS

~_pdfparams(gen,fpar,-1);
        --> expected_setfailed --> UNUR_ERR_DISTR_NPARAMS

~_pdfatmode(gen,-1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET

~_domain(gen,1.,-1.);
        --> expected_setfailed --> UNUR_ERR_DISTR_SET

~_pdfarea(gen,-1.);
        --> expected_setfailed --> UNUR_ERR_DISTR_SET


#############################################################################

[init]

[init - invalid NULL ptr: 
   par = NULL; ]

unur_init( par );
	--> expected_NULL --> UNUR_ERR_NULL


#############################################################################

[reinit]

[reinit - exist:
   distr = unur_distr_normal(NULL,0);
   par = unur_utdr_new(distr);
   gen = unur_init( par ); <-- ! NULL ]

unur_reinit( gen );
	--> expected_reinit

#############################################################################

[sample]

[sample - compare:
   distr = unur_distr_normal(NULL,0); 
   par = NULL; ]

/* default algorithm */
par = unur_utdr_new(distr);
        -->compare_double_sequence_par_start

/* default algorithm - verifying mode */
par = unur_utdr_new(distr);
unur_ssr_set_verify(par,1);
        -->compare_double_sequence_par


#############################################################################

[validate]

[validate - chi2 test:]

        --> run_validate_chi2 {
                /* default algorithm */
                par = unur_utdr_new(distr); }


#############################################################################
#############################################################################

[verbatim]

/* pdf of bimodal density */
double pdf_bimodal( double x, UNUR_DISTR *distr )
{ 
	return ( exp(-(x-1.)*(x-1.)) + exp(-(x+1.)*(x+1.)) );
}
double dpdf_bimodal( double x, UNUR_DISTR *distr )
{ 
	return ( -2. * (x-1.) * exp(-(x-1.)*(x-1.)) -2. * (x+1.) * exp(-(x+1.)*(x+1.)) );
}

/* pdf with negative value */
double pdf_negative( double x, UNUR_DISTR *distr )  { return (-x*x); }
double dpdf_negative( double x, UNUR_DISTR *distr ) { return (-2.*x); }

/* pdf with partial negative value */
double pdf_partnegative( double x, UNUR_DISTR *distr )  
{ 
	return ((x>-0.89 && x<0.89) ? -1.: exp(-x*x)); 
}
double dpdf_partnegative( double x, UNUR_DISTR *distr ) 
{
	return ((x>-0.89 && x<0.89) ?0.: -2.*x*exp(-x*x));
}

/* pdf of bimodal density */
double pdf( double x, UNUR_DISTR *distr )
{ 
	return exp(-x*x/2.);
} /* end of pdf */

#############################################################################
