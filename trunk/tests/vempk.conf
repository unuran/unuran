# $Id$
#############################################################################

[main]

[main - data:]

# method (for information only: the program scans the file name)
method: VEMPK

[main - header:]

/* prototypes */

\#define COMPARE_SAMPLE_SIZE   (10000)
\#define VIOLATE_SAMPLE_SIZE   (20)

#############################################################################

[new]

[new - invalid NULL ptr: 
   distr = NULL; ]

~( distr );
        --> expected_NULL --> UNUR_ERR_NULL


[new - invalid distribution type:
   distr = unur_distr_discr_new(); ]

~( distr );
         --> expected_NULL --> UNUR_ERR_DISTR_INVALID


[new - data missing in distribution object:
   distr = unur_distr_cvemp_new(2); ]

/* data */
~( distr );
        --> expected_NULL --> UNUR_ERR_DISTR_REQUIRED


#############################################################################

[set]

[set - invalid NULL ptr: 
   par = NULL; ]

~_smoothing( par, 1. );
        --> expected_setfailed --> UNUR_ERR_NULL

~_varcor( par, 1 );
        --> expected_setfailed --> UNUR_ERR_NULL


[set - invalid parameter object:
   distr = unur_distr_normal(NULL,0);
   par = unur_tdr_new(distr); ]

~_smoothing( par, 1. );
        --> expected_setfailed --> UNUR_ERR_PAR_INVALID

~_varcor( par, 1 );
        --> expected_setfailed --> UNUR_ERR_PAR_INVALID

free (par);

[set - invalid parameters:
   double data[] = {1.,1.,-1.,1.,1.,-1.,-1.,-1. };
   distr = unur_distr_cvemp_new(2);
   unur_distr_cvemp_set_data(distr, data, 4); 
   par = unur_vempk_new(distr); ]

~_smoothing( par, -1. );
        --> expected_setfailed --> UNUR_ERR_PAR_SET

free(par);


#############################################################################

[get]

#############################################################################

[chg]

[chg - invalid NULL ptr: 
   gen = NULL; ]

~_smoothing( gen, 1.);
        --> expected_setfailed --> UNUR_ERR_NULL

~_varcor( gen, 1 );
        --> expected_setfailed --> UNUR_ERR_NULL


[chg - invalid generator object:
   gen = unur_str2gen("normal"); <-- ! NULL ]

~_smoothing( gen, 1.);
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID

~_varcor( gen, 1 );
        --> expected_setfailed --> UNUR_ERR_GEN_INVALID


[chg - invalid parameters:
   double data[] = {1.,1.,-1.,1.,1.,-1.,-1.,-1. };
   distr = unur_distr_cvemp_new(2);
   unur_distr_cvemp_set_data(distr, data, 4); 
   par = unur_vempk_new(distr);
   gen = unur_init(par);  <-- ! NULL ]

~_smoothing( gen, -1.);
        --> expected_setfailed --> UNUR_ERR_PAR_SET


#############################################################################

[init]

#############################################################################

[reinit]

#############################################################################

[sample]

[sample - compare clone:
   double data[] = {1.,1.,-1.,1.,1.,-1.,-1.,-1. };
   UNUR_GEN *clone = NULL;
   distr = unur_distr_cvemp_new(2);
   unur_distr_cvemp_set_data(distr, data, 4); 
   par = unur_vempk_new(distr);
   gen = unur_init(par);   <-- ! NULL ]

/* default generator object */
        -->compare_cvec_sequence_gen_start

/* clone */
clone = unur_gen_clone(gen);
unur_free(gen);
gen = clone;
        -->compare_cvec_sequence_gen

/* set smoothing factor */
unur_free(gen);
par = unur_vempk_new(distr);
unur_vempk_set_smoothing( par, 3. );
gen = unur_init( par );
        -->compare_cvec_sequence_gen_start

/* clone */
clone = unur_gen_clone(gen);
unur_free(gen);
gen = clone;
        -->compare_cvec_sequence_gen


#############################################################################

[validate]

#
# TODO (Still missing!)
#

#############################################################################
#############################################################################

[verbatim]

#############################################################################
